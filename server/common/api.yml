openapi: 3.0.1

info:
  title: REST-api
  description: A REST api that exposes services to GRDN apps
  version: 1.0.0

servers:
  - url: /grdn/api

tags:
  - name: Examples
    description: Simple example endpoints
  - name: Specification
    description: The swagger API specification

paths:
  /blockchain/castBallot:
    post:
      tags:
        - Blockchain
      description: Vote for a valid option of an election
      requestBody:
        description: Body needed to cast the ballot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/castBallot'  
        required: true
      responses:
        201:
          description: Ballot was casted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voter'     
        4XX:
          description: Route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /blockchain/registerVoter:
    post:
      tags:
        - Blockchain
      description: Register a new voter
      requestBody:
        description: New voter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerVoter'     #TODO: Verify Schema
        required: true
      responses:
        201:
          description: Voter registered
          content:
            applicaction/json:
              schema:
                $ref: '#/components/schemas/Voter'       #TODO: Verify Schema
        4XX:
          description: Route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /blockchain/validateVoter:
    post:
      tags:
        - Blockchain
      description: Check if the voter can vote
      requestBody:
        description: Body needed to validate the voter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateVoter'     
        required: true
      responses:
        201:
          description: Voter can vote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voter'        
        4XX:
          description: Route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Examples
      description: Create a new example
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleBody'
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /examples/{id}:
    get:
      tags:
        - Examples
      parameters:
        - name: id
          in: path
          description: The id of the example to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}

components:
  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Error:
      type: object
      additionalProperties: true

    ExampleBody:
      title: example
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: no_stress

    Voter:
      type: object
      properties:
        voterId: 
          type: string
    
    validateVoter:
      title: Validate Voter
      required:
        - voterId
      type: object
      properties:
        voterId:
          type: string
        
    registerVoter:
      title: Register Voter
      required:
        - voterId
        - registrarId
        - firstName
        - lastName
      type: object
      properties:
        voterId:
          type: string
        registrarId:
          type: string
        firstName:
          type: string
        lastName: 
          type: string

    castBallot:
      title: Cast Ballot
      required:
        - voterId
        - electionId
      type: object
      properties:
        voterId: 
          type: string
        electionId:
          type: string